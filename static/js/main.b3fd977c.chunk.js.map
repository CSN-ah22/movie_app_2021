{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","title","year","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","slice","PropTyes","string","isRequired","arrayOf","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","Navigation","Detail","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"2RAWeA,MATf,SAAgBC,GAEZ,OADAC,QAAQC,IAAIF,GAER,qBAAKG,UAAU,mBAAf,SACA,+BAAM,oE,gHCFd,SAASC,EAAT,GAAoD,IAApCC,EAAmC,EAAnCA,MAAMC,EAA6B,EAA7BA,KAAKC,EAAwB,EAAxBA,QAAQC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OACvC,OACI,qBAAKN,UAAU,QAAf,SACI,eAAC,IAAD,CACIO,GAAK,CACDC,SAAU,eACVC,MAAO,CAAEN,OAAMD,QAAOE,UAASC,SAAQC,WAH/C,UAMA,qBAAKI,IAAKL,EAAQM,IAAKT,EAAOA,MAAOA,IACrC,sBAAKF,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BE,IAC7B,oBAAIF,UAAU,aAAd,SAA4BG,IAC5B,oBAAIH,UAAU,eAAd,SACKM,EAAOM,KAAI,SAACC,EAAOC,GAChB,OACI,oBAAgBd,UAAU,cAA1B,SAAyCa,GAAhCC,QAKrB,oBAAGd,UAAU,gBAAb,UAA8BI,EAAQW,MAAM,EAAE,KAA9C,iBAOhBd,EAAMe,SAAW,CACbb,KAAMa,IAASC,OAAOC,WACtBhB,MAAOc,IAASC,OAAOC,WACvBd,QAASY,IAASC,OAAOC,WACzBb,OAAQW,IAASC,OAAOC,WACxBZ,OAAQU,IAASG,QAAQH,IAASC,QAAQC,YAG/BjB,QCnCTmB,G,kNACFX,MAAQ,CACJY,WAAW,EACXC,OAAQ,I,EAIZC,U,sBAAY,8BAAAC,EAAA,sEAMEC,IAAMC,IAAI,4DANZ,gBAIMJ,EAJN,EAGJK,KACIA,KAAML,OAMd,EAAKM,SAAS,CAACN,SAAQD,WAAW,IAV1B,2C,uDAcZ,WAEIQ,KAAKN,c,oBAIT,WAEI,MAA8BM,KAAKpB,MAA3BY,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAEnB,OACI,yBAAStB,UAAU,YAAnB,SAEMqB,EACE,qBAAKrB,UAAU,SAAf,SACA,sBAAMA,UAAU,eAAhB,0BAGC,qBAAKA,UAAU,SAAf,SAEOsB,EAAOV,KAAI,SAACkB,GAER,OAAQ,cAAC,EAAD,CAEJC,GAAID,EAAMC,GACV5B,KAAM2B,EAAM3B,KACZD,MAAO4B,EAAM5B,MACbE,QAAS0B,EAAM1B,QACfC,OAAQyB,EAAME,mBACd1B,OAAQwB,EAAMxB,QANTwB,EAAMC,e,GA5C5BE,IAAMC,YA4DVd,I,MCrDAe,MATf,WACA,OACI,sBAAKnC,UAAU,MAAf,UACA,cAAC,IAAD,CAAMO,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uBCLE6B,E,uKACF,WACI,MAA4BP,KAAKhC,MAAzBwC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aACKC,IAAnBF,EAAS5B,OACT6B,EAAQE,KAAK,O,oBAGrB,WACA,IAAOH,EAAYR,KAAKhC,MAAjBwC,SACP,OAAIA,EAAS5B,MAEL,+BAAO4B,EAAS5B,MAAMP,QAGnB,S,GAdM+B,IAAMC,WAmBZE,ICHAK,MAXf,WACI,OACI,eAAC,IAAD,WACI,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWxB,IACxC,cAAC,IAAD,CAAOsB,KAAK,SAASE,UAAWhD,IAChC,cAAC,IAAD,CAAO8C,KAAK,gBAAgBE,UAAWR,QCTnDS,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.b3fd977c.chunk.js","sourcesContent":["import './About.css';\r\n\r\nfunction About (props){\r\n    console.log(props);\r\n    return (\r\n        <div className=\"about__container\">\r\n        <span><h1> \"Hello? ㅇㅅㅇ\" </h1></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","import PropTyes from 'prop-types'\r\nimport \"./Movie.css\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Movie({title,year,summary,poster, genres}){\r\n    return (\r\n        <div className=\"movie\">\r\n            <Link\r\n                to= {{\r\n                    pathname: 'movie-detail',\r\n                    state: { year, title, summary, poster, genres }\r\n                }}\r\n            >\r\n            <img src={poster} alt={title} title={title} />\r\n            <div className=\"movie-data\">\r\n                <h3 className=\"movie-title\">{title}</h3>\r\n                <h5 className=\"movie-year\">{year}</h5>\r\n                <ul className=\"movie-genres\">\r\n                    {genres.map((genre, index) => {\r\n                        return(\r\n                            <li key={index} className=\"movie-genre\">{genre}</li>\r\n                        )\r\n                    })\r\n                    }\r\n                </ul>\r\n                <p className=\"movie-summary\">{summary.slice(0,180)}...</p>\r\n            </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nMovie.PropTyes = {\r\n    year: PropTyes.string.isRequired,\r\n    title: PropTyes.string.isRequired,\r\n    summary: PropTyes.string.isRequired,\r\n    poster: PropTyes.string.isRequired,\r\n    genres: PropTyes.arrayOf(PropTyes.string).isRequired\r\n}\r\n\r\nexport default Movie;\r\n","import React from \"react\"\r\nimport axios from \"axios\"\r\nimport Movie from \"../components/Movie\"\r\nimport \"./Home.css\"\r\n\r\nclass Home extends React.Component{\r\n    state = {\r\n        isLoading: true,\r\n        movies: []\r\n    }\r\n\r\n    //영화 데이터 끌어오는 함수\r\n    getMovies = async () => { \r\n        //async와 await를 꼭 써주어야만 변수 movies에 값을 잘 할당할 수있다\r\n        const {\r\n            data: {\r\n                data:{movies}\r\n            }\r\n        } = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating') \r\n        //평점 내림차순으로 영화 데이터 받기\r\n\r\n        //state의 movies[]에 할당\r\n        this.setState({movies, isLoading: false})\r\n    }\r\n\r\n    //초기 render() 가 끝나면 실행된다\r\n    componentDidMount(){\r\n        //함수 호출\r\n        this.getMovies()\r\n    }\r\n\r\n    //View\r\n    render(){\r\n        //변수 isLoading, moives 선언후 state의 boolean값과 영화 데이터 할당\r\n        const { isLoading, movies } = this.state\r\n\r\n        return(\r\n            <section className=\"container\">\r\n                {/*삼항 연산자 true : false 따옴표와 콜론의 위치 주의 */}\r\n                { isLoading ?( \r\n                    <div className=\"loader\">\r\n                    <span className=\"loader-text:\">Loading...</span>\r\n                    </div>\r\n                 ) : (\r\n                     <div className=\"movies\">\r\n                         {\r\n                            movies.map((movie) => {\r\n                    \r\n                                return( <Movie\r\n                                    key={movie.id}\r\n                                    id={movie.id}\r\n                                    year={movie.year}\r\n                                    title={movie.title}\r\n                                    summary={movie.summary}\r\n                                    poster={movie.medium_cover_image}\r\n                                    genres={movie.genres} /> );\r\n                            }) \r\n                         }\r\n                     </div>\r\n                    )}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home; //까먹지 말기\r\n","import { Link } from 'react-router-dom'\r\nimport './Navigation.css'\r\n\r\nfunction Navigation(){\r\nreturn(\r\n    <div className='nav'>\r\n    <Link to=\"/\">Home</Link>\r\n    <Link to=\"/about\">About</Link>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nclass Detail extends React.Component{\r\n    componentDidMount(){//Detail 컴포넌트가 죽으면\r\n        const { location, history }=this.props\r\n        if (location.state === undefined){\r\n            history.push('/');\r\n        }\r\n    }\r\n    render() {\r\n    const {location} = this.props\r\n    if (location.state){\r\n        return(\r\n            <span>{location.state.title}</span>  \r\n        ) \r\n    }else{\r\n        return null\r\n    }\r\n    }\r\n}\r\n\r\nexport default Detail;","import \"./App.css\"\r\nimport { HashRouter , Route} from 'react-router-dom'\r\nimport About from './routes/About'\r\nimport Home from \"./routes/Home\"\r\nimport Navigation from \"./components/Navigation\"\r\nimport Detail from \"./routes/Detail\"\r\n\r\nfunction App(){\r\n    return(\r\n        <HashRouter>\r\n            <Navigation />\r\n            <Route path='/' exact={true} component={Home} />\r\n            <Route path='/about' component={About} />\r\n            <Route path='/movie-detail' component={Detail} />\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default App; //까먹지 말기\r\n\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n//컴포넌트를 사용합니다\r\nReactDOM.render(<App />,document.getElementById('root')); \r\n//APP.js의 function App를 호출하는것과 같음 \r\n//index.html에 ID값이 root인 div 태그안에 App컴포넌트 결과값을 넣게됨\r\n//컴포넌트는 하나만(App.js) 들어갈 수 있다\r\n//그러므로 App.js에 다른 컴포넌트를 생성해서 App컴포넌트에서 호출해주는 방식으로 사용해야한다\r\n\r\n"],"sourceRoot":""}